---
- name: Install Apt Applications
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: yes
    install_recommends: yes
  vars:
    packages:
      - git
      - python-dateutil
      - python-cdiff
      - python-psutil
      - python3-dateutil
      - python3-cdiff
      - python3-psutil

- name: Install pip modules
  pip:
    name: "{{ packages }}"
    executable: pip
  vars:
    packages:
      - python-etcd
      - python-consul
      - dnspython
      - boto
      - mock
      - requests
      - six
      - kazoo
      - click
      - tzlocal
      - prettytable
      - PyYAML
      - psycopg2

- name: Install pip3 modules
  pip:
    name: "{{ packages }}"
    executable: pip3
  vars:
    packages:
      - python-etcd
      - python-consul
      - dnspython
      - boto
      - mock
      - requests
      - six
      - kazoo
      - click
      - tzlocal
      - prettytable
      - PyYAML

- name: Git pull Patroni
  git:
    repo: https://github.com/zalando/patroni.git
    dest: /opt/patroni
    version: '{{ patroni_version }}'

- name: Create a symbolic link for PatroniCTL
  file:
    src: /opt/patroni/patronictl.py
    dest: /usr/bin/patronictl
    state: link

- name: Create /etc/patroni directory
  file:
    state: directory
    dest: /etc/patroni

- name: Put postgres.yml
  template:
    src: patroni/postgres.yml.j2
    dest: /etc/patroni/postgres.yml
    backup: yes

- name: Put patroni.service systemd unit
  template:
    src: patroni/patroni.service
    dest: /etc/systemd/system/patroni.service
    backup: yes

- name: Reload daemon definitions
  systemd:
    daemon_reload: yes

- name: Change file ownership, group for /etc/postgres
  file:
    path: "/etc/postgresql/{{ pg_version }}"
    owner: "{{ pg_user }}"
    group: "{{ pg_group }}"
    recurse: yes

- name: Restart and enable Patroni
  service:
    name: patroni
    state: restarted
    enabled: yes
  when: role == "master"

- name: Sleep 10 second
  pause:
    seconds: 10

- name: Restart and enable Patroni
  service:
    name: patroni
    state: restarted
    enabled: yes
  when: role != "master"

#- name: Restart PostgreSQL
#  service:
#    name: postgresql
#    state: restarted



